# -*- coding: utf-8 -*-
"""AI Career Mentor

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ByCY2ZkdSDfK4GmykKUQWFQLz60gKA3A
"""

# 📌 Step 1: Upload any Resume PDF
from google.colab import files
uploaded = files.upload()

# 🧾 Auto-detect file name
resume_file = next(iter(uploaded))
print("✅ Resume Uploaded:", resume_file)

# 📌 Step 2: Install required package
!pip install pdfplumber -q
import pdfplumber

# 📌 Step 3: Extract text from any resume
resume_text = ""
with pdfplumber.open(resume_file) as pdf:
    for page in pdf.pages:
        resume_text += page.extract_text()

print("📄 Resume Text Preview:\n")
print(resume_text[:1000])  # Preview first 1000 characters

# 📌 Step 4: Extract skills from resume
import spacy
!python -m spacy download en_core_web_sm -q
nlp = spacy.load("en_core_web_sm")
doc = nlp(resume_text.lower())

# 🎯 Define skill keywords
skill_keywords = ['python', 'sql', 'machine learning', 'deep learning', 'excel',
                  'data analysis', 'java', 'html', 'css', 'marketing', 'sales', 'project management']

found_skills = list(set([token.text for token in doc if token.text in skill_keywords]))
print("\n🛠️ Skills Found in Resume:", found_skills)

# 📌 Step 5: Match skills to career paths
career_map = {
    'Data Scientist': ['python', 'machine learning', 'data analysis'],
    'Data Analyst': ['sql', 'excel', 'data analysis'],
    'AI Researcher': ['deep learning', 'python', 'machine learning'],
    'Marketing Specialist': ['marketing', 'sales', 'excel'],
    'Web Developer': ['html', 'css', 'javascript'],
    'Project Manager': ['project management', 'excel', 'sales']
}

suggested_careers = []
for career, required in career_map.items():
    match = len(set(found_skills).intersection(required))
    score = round((match / len(required)) * 100)
    if match > 0:
        suggested_careers.append((career, score))

# 📈 Step 6: Print career suggestions
suggested_careers = sorted(suggested_careers, key=lambda x: x[1], reverse=True)
print("\n📊 Career Suggestions Based on Your Resume:\n")
for career, score in suggested_careers:
    print(f"✅ {career} – {score}% match")

# 📌 Step 7: Recommend missing skills + learning links
if suggested_careers:
    top_career = suggested_careers[0][0]
    missing = list(set(career_map[top_career]) - set(found_skills))
    print(f"\n🚀 Best Match: {top_career}")
    print("❌ Missing Skills:", missing)
    print("\n📚 Learn These Skills:")
    for skill in missing:
        print(f"🔗 https://www.coursera.org/search?query={skill}")
else:
    print("\n❗ Not enough matching skills found. Try updating your resume with more technical skills.")